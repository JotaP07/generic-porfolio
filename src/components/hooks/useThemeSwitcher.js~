import React, { useEffect, useState } from 'react';

const useThemeSwitcher = () => {
    const preferDarkQuery = "(prefers-color-scheme: dark)";

    // Inicializa o estado com o tema salvo ou preferido pelo sistema
    const getInitialTheme = () => {
        if (typeof window !== "undefined") {
            const userPref = window.localStorage.getItem("theme");
            if (userPref) {
                return userPref; // Retorna o tema salvo pelo usuário
            } else {
                const mediaQuery = window.matchMedia(preferDarkQuery);
                return mediaQuery.matches ? "dark" : "light"; // Retorna o tema do sistema
            }
        }
        return "light"; // Valor padrão para servidores ou quando `window` não está definido
    };

    const [mode, setMode] = useState(getInitialTheme);

    useEffect(() => {
        if (typeof window !== "undefined") {
            const mediaQuery = window.matchMedia(preferDarkQuery);

            const handleChange = () => {
                const systemTheme = mediaQuery.matches ? "dark" : "light";
                if (!window.localStorage.getItem("theme")) {
                    setMode(systemTheme); // Atualiza o estado se o usuário não definiu um tema
                }
            };

            mediaQuery.addEventListener("change", handleChange);

            return () => mediaQuery.removeEventListener("change", handleChange);
        }
    }, []);

    useEffect(() => {
        if (typeof window !== "undefined") {
            window.localStorage.setItem("theme", mode); // Salva o tema no localStorage
            if (mode === "dark") {
                document.documentElement.classList.add("dark");
            } else {
                document.documentElement.classList.remove("dark");
            }
        }
    }, [mode]);

    return [mode, setMode];
};

export default useThemeSwitcher;
